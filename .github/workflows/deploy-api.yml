name: Deploy API to AWS Lambda

on:
  push:
    branches: [ main ]
    paths:
      - 'api-svc/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api-svc

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma Client
        run: pnpm prisma generate

      - name: Build TypeScript
        run: pnpm build

      - name: Create deployment package
        run: |
          # Create a clean deployment directory
          mkdir -p package
          
          # Copy only the necessary files
          cp -r dist/* package/
          cp package.json package/
          
          # Create minimal prisma directory
          mkdir -p package/prisma
          cp prisma/schema.prisma package/prisma/
          
          cd package
          
          # Install only production dependencies
          pnpm install --prod --no-lockfile
          
          # Generate prisma client
          pnpm prisma generate
          
          # Remove unnecessary files
          rm -rf node_modules/@prisma/engines
          rm -rf node_modules/prisma
          
          # Create optimized zip
          zip -r ../deployment-package.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Create or update Lambda
        run: |
          if ! aws lambda get-function --function-name medication-manager-api &>/dev/null; then
            echo "Creating new Lambda function..."
            aws lambda create-function \
              --function-name medication-manager-api \
              --runtime nodejs18.x \
              --handler lambda.lambdaHandler \
              --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/medication-manager-lambda-role \
              --zip-file fileb://deployment-package.zip \
              --timeout 30 \
              --memory-size 256 \
              --environment "Variables={DATABASE_URL=${{ secrets.DATABASE_URL }},NODE_ENV=production}"
          else
            echo "Updating existing Lambda function..."
            aws lambda update-function-code \
              --function-name medication-manager-api \
              --zip-file fileb://deployment-package.zip

            echo "Waiting for update to complete..."
            aws lambda wait function-updated \
              --function-name medication-manager-api
            
            echo "Updating function configuration..."
            aws lambda update-function-configuration \
              --function-name medication-manager-api \
              --handler lambda.lambdaHandler \
              --runtime nodejs18.x \
              --timeout 30 \
              --memory-size 256 \
              --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/medication-manager-lambda-role \
              --environment "Variables={DATABASE_URL=${{ secrets.DATABASE_URL }},NODE_ENV=production}"
          fi